import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import fetch_california_housing
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# Load the California Housing dataset
california_housing = fetch_california_housing()
X = pd.DataFrame(california_housing.data, columns=california_housing.feature_names)
y = pd.Series(california_housing.target)

# For demonstration, we will use only one feature (e.g., 'MedInc' - median income)
X_single_feature = X[['MedInc']]

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_single_feature, y, test_size=0.2, random_state=42)

# Create polynomial features
degree = 2  # You can change the degree of the polynomial
poly = PolynomialFeatures(degree=degree)
X_train_poly = poly.fit_transform(X_train)
X_test_poly = poly.transform(X_test)

# Create a Linear Regression model
model = LinearRegression()

# Train the model
model.fit(X_train_poly, y_train)

# Make predictions
y_pred = model.predict(X_test_poly)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R^2 Score:", r2)

# Plotting the results
plt.scatter(X_test, y_test, color='blue', label='Actual Prices')
plt.scatter(X_test, y_pred, color='red', label='Predicted Prices')
plt.title('Actual vs Predicted Prices')
plt.xlabel('Median Income (MedInc)')
plt.ylabel('House Price')
plt.legend()
plt.show()

# Optional: Visualizing the polynomial regression curve
X_grid = np.arange(min(X_test['MedInc']), max(X_test['MedInc']), 0.01).reshape(-1, 1)
X_grid_poly = poly.transform(X_grid)
y_grid_pred = model.predict(X_grid_poly)

plt.scatter(X_test, y_test, color='blue', label='Actual Prices')
plt.plot(X_grid, y_grid_pred, color='red', label='Polynomial Regression Curve')
plt.title('Polynomial Linear Regression')
plt.xlabel('Median Income (MedInc)')
plt.ylabel('House Price')
plt.legend()
plt.show()
